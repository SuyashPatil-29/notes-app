.ProseMirror {
    padding: 1.5rem 1rem;
  }
  
  @media (min-width: 640px) {
    .ProseMirror {
      padding: 2rem 1.5rem;
    }
  }

  /* Markdown-style Typography */
  .ProseMirror h1 {
    font-size: 2.5rem;
    font-weight: 700;
    line-height: 1.2;
    margin-top: 2rem;
    margin-bottom: 1rem;
    letter-spacing: -0.02em;
  }

  .ProseMirror h2 {
    font-size: 2rem;
    font-weight: 700;
    line-height: 1.3;
    margin-top: 1.75rem;
    margin-bottom: 0.875rem;
    letter-spacing: -0.015em;
  }

  .ProseMirror h3 {
    font-size: 1.5rem;
    font-weight: 600;
    line-height: 1.4;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }

  .ProseMirror h4 {
    font-size: 1.25rem;
    font-weight: 600;
    line-height: 1.5;
    margin-top: 1.25rem;
    margin-bottom: 0.625rem;
  }

  .ProseMirror h5 {
    font-size: 1.125rem;
    font-weight: 600;
    line-height: 1.5;
    margin-top: 1rem;
    margin-bottom: 0.5rem;
  }

  .ProseMirror h6 {
    font-size: 1rem;
    font-weight: 600;
    line-height: 1.5;
    margin-top: 1rem;
    margin-bottom: 0.5rem;
    color: hsl(var(--muted-foreground));
  }

  .ProseMirror p {
    margin-top: 0.75rem;
    margin-bottom: 0.75rem;
    line-height: 1.7;
  }

  .ProseMirror ul,
  .ProseMirror ol {
    margin-top: 0.75rem;
    margin-bottom: 0.75rem;
    padding-left: 1.625rem;
  }

  .ProseMirror ul {
    list-style-type: disc;
  }

  .ProseMirror ol {
    list-style-type: decimal;
  }

  .ProseMirror li {
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
    line-height: 1.7;
  }

  .ProseMirror li > p {
    margin-top: 0.25rem;
    margin-bottom: 0.25rem;
  }

  .ProseMirror blockquote {
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
    border-left: 3px solid hsl(var(--border));
    font-style: italic;
    color: hsl(var(--muted-foreground));
  }

  .ProseMirror code {
    font-family: 'Courier New', Courier, monospace;
    font-size: 0.875em;
    padding: 0.2em 0.4em;
    background-color: hsl(var(--muted));
    border-radius: 0.25rem;
    color: hsl(var(--foreground));
  }

  .ProseMirror pre {
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
    padding: 1rem;
    background-color: hsl(var(--muted));
    border-radius: 0.5rem;
    overflow-x: auto;
    position: relative;
  }

  .ProseMirror pre code {
    padding: 0;
    background-color: transparent;
    font-size: 0.875rem;
    line-height: 1.7;
    display: block;
  }

  /* Language label for code blocks */
  .ProseMirror pre[data-language]::before {
    content: attr(data-language);
    position: absolute;
    top: 0.5rem;
    right: 0.75rem;
    font-size: 0.75rem;
    font-weight: 600;
    color: hsl(var(--muted-foreground));
    opacity: 0.6;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-family: system-ui, -apple-system, sans-serif;
  }

  /* Syntax Highlighting for Code Blocks */
  .ProseMirror .hljs-comment,
  .ProseMirror .hljs-quote {
    color: #6a737d;
    font-style: italic;
  }

  .ProseMirror .hljs-keyword,
  .ProseMirror .hljs-selector-tag,
  .ProseMirror .hljs-addition {
    color: #d73a49;
  }

  .ProseMirror .hljs-number,
  .ProseMirror .hljs-string,
  .ProseMirror .hljs-meta .hljs-string,
  .ProseMirror .hljs-literal,
  .ProseMirror .hljs-doctag,
  .ProseMirror .hljs-regexp {
    color: #032f62;
  }

  .ProseMirror .hljs-title,
  .ProseMirror .hljs-section,
  .ProseMirror .hljs-name,
  .ProseMirror .hljs-selector-id,
  .ProseMirror .hljs-selector-class {
    color: #6f42c1;
  }

  .ProseMirror .hljs-attribute,
  .ProseMirror .hljs-attr,
  .ProseMirror .hljs-variable,
  .ProseMirror .hljs-template-variable,
  .ProseMirror .hljs-class .hljs-title,
  .ProseMirror .hljs-type {
    color: #e36209;
  }

  .ProseMirror .hljs-symbol,
  .ProseMirror .hljs-bullet,
  .ProseMirror .hljs-subst,
  .ProseMirror .hljs-meta,
  .ProseMirror .hljs-link {
    color: #005cc5;
  }

  .ProseMirror .hljs-built_in,
  .ProseMirror .hljs-deletion {
    color: #22863a;
  }

  .ProseMirror .hljs-formula {
    background-color: #eee;
  }

  .ProseMirror .hljs-emphasis {
    font-style: italic;
  }

  .ProseMirror .hljs-strong {
    font-weight: 700;
  }

  /* Dark mode syntax highlighting */
  .dark .ProseMirror .hljs-comment,
  .dark .ProseMirror .hljs-quote {
    color: #8b949e;
  }

  .dark .ProseMirror .hljs-keyword,
  .dark .ProseMirror .hljs-selector-tag,
  .dark .ProseMirror .hljs-addition {
    color: #ff7b72;
  }

  .dark .ProseMirror .hljs-number,
  .dark .ProseMirror .hljs-string,
  .dark .ProseMirror .hljs-meta .hljs-string,
  .dark .ProseMirror .hljs-literal,
  .dark .ProseMirror .hljs-doctag,
  .dark .ProseMirror .hljs-regexp {
    color: #a5d6ff;
  }

  .dark .ProseMirror .hljs-title,
  .dark .ProseMirror .hljs-section,
  .dark .ProseMirror .hljs-name,
  .dark .ProseMirror .hljs-selector-id,
  .dark .ProseMirror .hljs-selector-class {
    color: #d2a8ff;
  }

  .dark .ProseMirror .hljs-attribute,
  .dark .ProseMirror .hljs-attr,
  .dark .ProseMirror .hljs-variable,
  .dark .ProseMirror .hljs-template-variable,
  .dark .ProseMirror .hljs-class .hljs-title,
  .dark .ProseMirror .hljs-type {
    color: #ffa657;
  }

  .dark .ProseMirror .hljs-symbol,
  .dark .ProseMirror .hljs-bullet,
  .dark .ProseMirror .hljs-subst,
  .dark .ProseMirror .hljs-meta,
  .dark .ProseMirror .hljs-link {
    color: #79c0ff;
  }

  .dark .ProseMirror .hljs-built_in,
  .dark .ProseMirror .hljs-deletion {
    color: #7ee787;
  }

  .dark .ProseMirror .hljs-formula {
    background-color: #2d333b;
  }

  .ProseMirror hr {
    margin-top: 2rem;
    margin-bottom: 2rem;
    border: none;
    border-top: 1px solid hsl(var(--border));
  }

  .ProseMirror a {
    color: hsl(var(--primary));
    text-decoration: underline;
    text-decoration-color: hsl(var(--primary) / 0.3);
    text-underline-offset: 2px;
    transition: text-decoration-color 0.2s;
  }

  .ProseMirror a:hover {
    text-decoration-color: hsl(var(--primary));
  }

  .ProseMirror strong {
    font-weight: 700;
  }

  .ProseMirror em {
    font-style: italic;
  }
  
  .ProseMirror .is-editor-empty:first-child::before {
    content: attr(data-placeholder);
    float: left;
    color: hsl(var(--muted-foreground));
    pointer-events: none;
    height: 0;
  }
  .ProseMirror .is-empty::before {
    content: attr(data-placeholder);
    float: left;
    color: hsl(var(--muted-foreground));
    pointer-events: none;
    height: 0;
  }
  
  /* Custom image styles */
  
  .ProseMirror img {
    transition: filter 0.1s ease-in-out;
  
    &:hover {
      cursor: pointer;
      filter: brightness(90%);
    }
  
    &.ProseMirror-selectednode {
      outline: 3px solid #5abbf7;
      filter: brightness(90%);
    }
  }
  
  .img-placeholder {
    position: relative;
  
    &:before {
      content: "";
      box-sizing: border-box;
      position: absolute;
      top: 50%;
      left: 50%;
      width: 36px;
      height: 36px;
      border-radius: 50%;
      border: 3px solid var(--novel-stone-200);
      border-top-color: var(--novel-stone-800);
      animation: spinning 0.6s linear infinite;
    }
  }
  
  @keyframes spinning {
    to {
      transform: rotate(360deg);
    }
  }
  
  /* Custom TODO list checkboxes â€“ shoutout to this awesome tutorial: https://moderncss.dev/pure-css-custom-checkbox-style/ */
  
  ul[data-type="taskList"] li > label {
    margin-right: 0.2rem;
    user-select: none;
  }
  
  @media screen and (max-width: 768px) {
    ul[data-type="taskList"] li > label {
      margin-right: 0.5rem;
    }
  }
  
  ul[data-type="taskList"] li > label input[type="checkbox"] {
    -webkit-appearance: none;
    appearance: none;
    background-color: hsl(var(--background));
    margin: 0;
    cursor: pointer;
    width: 1.2em;
    height: 1.2em;
    position: relative;
    top: 5px;
    border: 2px solid hsl(var(--border));
    margin-right: 0.3rem;
    display: grid;
    place-content: center;
  
    &:hover {
      background-color: hsl(var(--accent));
    }
  
    &:active {
      background-color: hsl(var(--accent));
    }
  
    &::before {
      content: "";
      width: 0.65em;
      height: 0.65em;
      transform: scale(0);
      transition: 120ms transform ease-in-out;
      box-shadow: inset 1em 1em;
      transform-origin: center;
      clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
    }
  
    &:checked::before {
      transform: scale(1);
    }
  }
  
  ul[data-type="taskList"] li[data-checked="true"] > div > p {
    color: var(--muted-foreground);
    text-decoration: line-through;
    text-decoration-thickness: 2px;
  }
  
  /* Overwrite tippy-box original max-width */
  
  .tippy-box {
    max-width: 400px !important;
  }
  
  .ProseMirror:not(.dragging) .ProseMirror-selectednode {
    outline: none !important;
    background-color: var(--novel-highlight-blue);
    transition: background-color 0.2s;
    box-shadow: none;
  }
  
  .drag-handle {
    position: fixed;
    opacity: 1;
    transition: opacity ease-in 0.2s;
    border-radius: 0.25rem;
  
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 10' style='fill: rgba(0, 0, 0, 0.5)'%3E%3Cpath d='M3,2 C2.44771525,2 2,1.55228475 2,1 C2,0.44771525 2.44771525,0 3,0 C3.55228475,0 4,0.44771525 4,1 C4,1.55228475 3.55228475,2 3,2 Z M3,6 C2.44771525,6 2,5.55228475 2,5 C2,4.44771525 2.44771525,4 3,4 C3.55228475,4 4,4.44771525 4,5 C4,5.55228475 3.55228475,6 3,6 Z M3,10 C2.44771525,10 2,9.55228475 2,9 C2,8.44771525 2.44771525,8 3,8 C3.55228475,8 4,8.44771525 4,9 C4,9.55228475 3.55228475,10 3,10 Z M7,2 C6.44771525,2 6,1.55228475 6,1 C6,0.44771525 6.44771525,0 7,0 C7.55228475,0 8,0.44771525 8,1 C8,1.55228475 7.55228475,2 7,2 Z M7,6 C6.44771525,6 6,5.55228475 6,5 C6,4.44771525 6.44771525,4 7,4 C7.55228475,4 8,4.44771525 8,5 C8,5.55228475 7.55228475,6 7,6 Z M7,10 C6.44771525,10 6,9.55228475 6,9 C6,8.44771525 6.44771525,8 7,8 C7.55228475,8 8,8.44771525 8,9 C8,9.55228475 7.55228475,10 7,10 Z'%3E%3C/path%3E%3C/svg%3E");
    background-size: calc(0.5em + 0.375rem) calc(0.5em + 0.375rem);
    background-repeat: no-repeat;
    background-position: center;
    width: 1.2rem;
    height: 1.5rem;
    z-index: 50;
    cursor: grab;
  
    &:hover {
      background-color: var(--novel-stone-100);
      transition: background-color 0.2s;
    }
  
    &:active {
      background-color: var(--novel-stone-200);
      transition: background-color 0.2s;
      cursor: grabbing;
    }
  
    &.hide {
      opacity: 0;
      pointer-events: none;
    }
  
    @media screen and (max-width: 600px) {
      display: none;
      pointer-events: none;
    }
  }
  
  .dark .drag-handle {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 10' style='fill: rgba(255, 255, 255, 0.5)'%3E%3Cpath d='M3,2 C2.44771525,2 2,1.55228475 2,1 C2,0.44771525 2.44771525,0 3,0 C3.55228475,0 4,0.44771525 4,1 C4,1.55228475 3.55228475,2 3,2 Z M3,6 C2.44771525,6 2,5.55228475 2,5 C2,4.44771525 2.44771525,4 3,4 C3.55228475,4 4,4.44771525 4,5 C4,5.55228475 3.55228475,6 3,6 Z M3,10 C2.44771525,10 2,9.55228475 2,9 C2,8.44771525 2.44771525,8 3,8 C3.55228475,8 4,8.44771525 4,9 C4,9.55228475 3.55228475,10 3,10 Z M7,2 C6.44771525,2 6,1.55228475 6,1 C6,0.44771525 6.44771525,0 7,0 C7.55228475,0 8,0.44771525 8,1 C8,1.55228475 7.55228475,2 7,2 Z M7,6 C6.44771525,6 6,5.55228475 6,5 C6,4.44771525 6.44771525,4 7,4 C7.55228475,4 8,4.44771525 8,5 C8,5.55228475 7.55228475,6 7,6 Z M7,10 C6.44771525,10 6,9.55228475 6,9 C6,8.44771525 6.44771525,8 7,8 C7.55228475,8 8,8.44771525 8,9 C8,9.55228475 7.55228475,10 7,10 Z'%3E%3C/path%3E%3C/svg%3E");
  }
  
  /* Custom Youtube Video CSS */
  iframe {
    border: 8px solid #ffd00027;
    border-radius: 4px;
    min-width: 200px;
    min-height: 200px;
    display: block;
    outline: 0px solid transparent;
  }
  
  div[data-youtube-video] > iframe {
    cursor: move;
    aspect-ratio: 16 / 9;
    width: 100%;
  }
  
  .ProseMirror-selectednode iframe {
    transition: outline 0.15s;
    outline: 6px solid #fbbf24;
  }
  
  @media only screen and (max-width: 480px) {
    div[data-youtube-video] > iframe {
      max-height: 50px;
    }
  }
  
  @media only screen and (max-width: 720px) {
    div[data-youtube-video] > iframe {
      max-height: 100px;
    }
  }
  
  /* CSS for bold coloring and highlighting issue*/
  span[style] > strong {
    color: inherit;
  }
  
  mark[style] > strong {
    color: inherit;
  }